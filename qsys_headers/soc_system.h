#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for device 'ocram_64K', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'master_0'.
 * The macros are prefixed with 'MASTER_0_OCRAM_64K_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_0_OCRAM_64K_COMPONENT_TYPE altera_avalon_onchip_memory2
#define MASTER_0_OCRAM_64K_COMPONENT_NAME ocram_64K
#define MASTER_0_OCRAM_64K_BASE 0x0
#define MASTER_0_OCRAM_64K_SPAN 65536
#define MASTER_0_OCRAM_64K_END 0xffff
#define MASTER_0_OCRAM_64K_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define MASTER_0_OCRAM_64K_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define MASTER_0_OCRAM_64K_CONTENTS_INFO ""
#define MASTER_0_OCRAM_64K_DUAL_PORT 0
#define MASTER_0_OCRAM_64K_GUI_RAM_BLOCK_TYPE AUTO
#define MASTER_0_OCRAM_64K_INIT_CONTENTS_FILE soc_system_ocram_64K
#define MASTER_0_OCRAM_64K_INIT_MEM_CONTENT 1
#define MASTER_0_OCRAM_64K_INSTANCE_ID NONE
#define MASTER_0_OCRAM_64K_NON_DEFAULT_INIT_FILE_ENABLED 0
#define MASTER_0_OCRAM_64K_RAM_BLOCK_TYPE AUTO
#define MASTER_0_OCRAM_64K_READ_DURING_WRITE_MODE DONT_CARE
#define MASTER_0_OCRAM_64K_SINGLE_CLOCK_OP 0
#define MASTER_0_OCRAM_64K_SIZE_MULTIPLE 1
#define MASTER_0_OCRAM_64K_SIZE_VALUE 65536
#define MASTER_0_OCRAM_64K_WRITABLE 1
#define MASTER_0_OCRAM_64K_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define MASTER_0_OCRAM_64K_MEMORY_INFO_GENERATE_DAT_SYM 1
#define MASTER_0_OCRAM_64K_MEMORY_INFO_GENERATE_HEX 1
#define MASTER_0_OCRAM_64K_MEMORY_INFO_HAS_BYTE_LANE 0
#define MASTER_0_OCRAM_64K_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define MASTER_0_OCRAM_64K_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define MASTER_0_OCRAM_64K_MEMORY_INFO_MEM_INIT_FILENAME soc_system_ocram_64K

/*
 * Macros for device 'switch_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_0'.
 * The macros are prefixed with 'MASTER_0_SWITCH_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_0_SWITCH_PIO_COMPONENT_TYPE altera_avalon_pio
#define MASTER_0_SWITCH_PIO_COMPONENT_NAME switch_pio
#define MASTER_0_SWITCH_PIO_BASE 0x10800
#define MASTER_0_SWITCH_PIO_SPAN 16
#define MASTER_0_SWITCH_PIO_END 0x1080f
#define MASTER_0_SWITCH_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_0_SWITCH_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_0_SWITCH_PIO_CAPTURE 0
#define MASTER_0_SWITCH_PIO_DATA_WIDTH 3
#define MASTER_0_SWITCH_PIO_DO_TEST_BENCH_WIRING 0
#define MASTER_0_SWITCH_PIO_DRIVEN_SIM_VALUE 0
#define MASTER_0_SWITCH_PIO_EDGE_TYPE NONE
#define MASTER_0_SWITCH_PIO_FREQ 50000000
#define MASTER_0_SWITCH_PIO_HAS_IN 1
#define MASTER_0_SWITCH_PIO_HAS_OUT 0
#define MASTER_0_SWITCH_PIO_HAS_TRI 0
#define MASTER_0_SWITCH_PIO_IRQ_TYPE NONE
#define MASTER_0_SWITCH_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_0'.
 * The macros are prefixed with 'MASTER_0_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_0_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define MASTER_0_BUTTON_PIO_COMPONENT_NAME button_pio
#define MASTER_0_BUTTON_PIO_BASE 0x10810
#define MASTER_0_BUTTON_PIO_SPAN 16
#define MASTER_0_BUTTON_PIO_END 0x1081f
#define MASTER_0_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_0_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_0_BUTTON_PIO_CAPTURE 0
#define MASTER_0_BUTTON_PIO_DATA_WIDTH 4
#define MASTER_0_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define MASTER_0_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define MASTER_0_BUTTON_PIO_EDGE_TYPE NONE
#define MASTER_0_BUTTON_PIO_FREQ 50000000
#define MASTER_0_BUTTON_PIO_HAS_IN 1
#define MASTER_0_BUTTON_PIO_HAS_OUT 0
#define MASTER_0_BUTTON_PIO_HAS_TRI 0
#define MASTER_0_BUTTON_PIO_IRQ_TYPE NONE
#define MASTER_0_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_0'.
 * The macros are prefixed with 'MASTER_0_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_0_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define MASTER_0_LED_PIO_COMPONENT_NAME led_pio
#define MASTER_0_LED_PIO_BASE 0x10820
#define MASTER_0_LED_PIO_SPAN 16
#define MASTER_0_LED_PIO_END 0x1082f
#define MASTER_0_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_0_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_0_LED_PIO_CAPTURE 0
#define MASTER_0_LED_PIO_DATA_WIDTH 4
#define MASTER_0_LED_PIO_DO_TEST_BENCH_WIRING 0
#define MASTER_0_LED_PIO_DRIVEN_SIM_VALUE 0
#define MASTER_0_LED_PIO_EDGE_TYPE NONE
#define MASTER_0_LED_PIO_FREQ 50000000
#define MASTER_0_LED_PIO_HAS_IN 0
#define MASTER_0_LED_PIO_HAS_OUT 1
#define MASTER_0_LED_PIO_HAS_TRI 0
#define MASTER_0_LED_PIO_IRQ_TYPE NONE
#define MASTER_0_LED_PIO_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys_0', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'master_0'.
 * The macros are prefixed with 'MASTER_0_SYSID_QSYS_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_0_SYSID_QSYS_0_COMPONENT_TYPE altera_avalon_sysid_qsys
#define MASTER_0_SYSID_QSYS_0_COMPONENT_NAME sysid_qsys_0
#define MASTER_0_SYSID_QSYS_0_BASE 0x10830
#define MASTER_0_SYSID_QSYS_0_SPAN 8
#define MASTER_0_SYSID_QSYS_0_END 0x10837
#define MASTER_0_SYSID_QSYS_0_ID 3725647376
#define MASTER_0_SYSID_QSYS_0_TIMESTAMP 1616564416

/*
 * Macros for device 'jtag_uart_0', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'master_0'.
 * The macros are prefixed with 'MASTER_0_JTAG_UART_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_0_JTAG_UART_0_COMPONENT_TYPE altera_avalon_jtag_uart
#define MASTER_0_JTAG_UART_0_COMPONENT_NAME jtag_uart_0
#define MASTER_0_JTAG_UART_0_BASE 0x10838
#define MASTER_0_JTAG_UART_0_SPAN 8
#define MASTER_0_JTAG_UART_0_END 0x1083f
#define MASTER_0_JTAG_UART_0_READ_DEPTH 64
#define MASTER_0_JTAG_UART_0_READ_THRESHOLD 8
#define MASTER_0_JTAG_UART_0_WRITE_DEPTH 64
#define MASTER_0_JTAG_UART_0_WRITE_THRESHOLD 8

/*
 * Macros for module 'nios2_gen2_0', class 'altera_nios2_gen2'.
 * The macros are prefixed with 'NIOS2_GEN2_0_'.
 * The prefix comes from the module name.
 */
#define NIOS2_GEN2_0_COMPONENT_TYPE altera_nios2_gen2
#define NIOS2_GEN2_0_COMPONENT_NAME nios2_gen2_0
#define NIOS2_GEN2_0_BIG_ENDIAN 0
#define NIOS2_GEN2_0_BREAK_ADDR 0x10020
#define NIOS2_GEN2_0_CPU_ARCH_NIOS2_R1 
#define NIOS2_GEN2_0_CPU_FREQ 50000000
#define NIOS2_GEN2_0_CPU_ID_SIZE 1
#define NIOS2_GEN2_0_CPU_ID_VALUE 0x00000000
#define NIOS2_GEN2_0_CPU_IMPLEMENTATION "tiny"
#define NIOS2_GEN2_0_DATA_ADDR_WIDTH 17
#define NIOS2_GEN2_0_DCACHE_LINE_SIZE 0
#define NIOS2_GEN2_0_DCACHE_LINE_SIZE_LOG2 0
#define NIOS2_GEN2_0_DCACHE_SIZE 0
#define NIOS2_GEN2_0_EXCEPTION_ADDR 0x20
#define NIOS2_GEN2_0_FLASH_ACCELERATOR_LINES 0
#define NIOS2_GEN2_0_FLASH_ACCELERATOR_LINE_SIZE 0
#define NIOS2_GEN2_0_FLUSHDA_SUPPORTED 
#define NIOS2_GEN2_0_HARDWARE_DIVIDE_PRESENT 0
#define NIOS2_GEN2_0_HARDWARE_MULTIPLY_PRESENT 0
#define NIOS2_GEN2_0_HARDWARE_MULX_PRESENT 0
#define NIOS2_GEN2_0_HAS_DEBUG_CORE 1
#define NIOS2_GEN2_0_HAS_DEBUG_STUB 
#define NIOS2_GEN2_0_HAS_ILLEGAL_INSTRUCTION_EXCEPTION 
#define NIOS2_GEN2_0_HAS_JMPI_INSTRUCTION 
#define NIOS2_GEN2_0_ICACHE_LINE_SIZE 0
#define NIOS2_GEN2_0_ICACHE_LINE_SIZE_LOG2 0
#define NIOS2_GEN2_0_ICACHE_SIZE 0
#define NIOS2_GEN2_0_INST_ADDR_WIDTH 17
#define NIOS2_GEN2_0_OCI_VERSION 1
#define NIOS2_GEN2_0_RESET_ADDR 0x0

/*
 * Macros for device 'ocram_64K', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'nios2_gen2_0'.
 * The macros are prefixed with 'NIOS2_GEN2_0_OCRAM_64K_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define NIOS2_GEN2_0_OCRAM_64K_COMPONENT_TYPE altera_avalon_onchip_memory2
#define NIOS2_GEN2_0_OCRAM_64K_COMPONENT_NAME ocram_64K
#define NIOS2_GEN2_0_OCRAM_64K_BASE 0x0
#define NIOS2_GEN2_0_OCRAM_64K_SPAN 65536
#define NIOS2_GEN2_0_OCRAM_64K_END 0xffff
#define NIOS2_GEN2_0_OCRAM_64K_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define NIOS2_GEN2_0_OCRAM_64K_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define NIOS2_GEN2_0_OCRAM_64K_CONTENTS_INFO ""
#define NIOS2_GEN2_0_OCRAM_64K_DUAL_PORT 0
#define NIOS2_GEN2_0_OCRAM_64K_GUI_RAM_BLOCK_TYPE AUTO
#define NIOS2_GEN2_0_OCRAM_64K_INIT_CONTENTS_FILE soc_system_ocram_64K
#define NIOS2_GEN2_0_OCRAM_64K_INIT_MEM_CONTENT 1
#define NIOS2_GEN2_0_OCRAM_64K_INSTANCE_ID NONE
#define NIOS2_GEN2_0_OCRAM_64K_NON_DEFAULT_INIT_FILE_ENABLED 0
#define NIOS2_GEN2_0_OCRAM_64K_RAM_BLOCK_TYPE AUTO
#define NIOS2_GEN2_0_OCRAM_64K_READ_DURING_WRITE_MODE DONT_CARE
#define NIOS2_GEN2_0_OCRAM_64K_SINGLE_CLOCK_OP 0
#define NIOS2_GEN2_0_OCRAM_64K_SIZE_MULTIPLE 1
#define NIOS2_GEN2_0_OCRAM_64K_SIZE_VALUE 65536
#define NIOS2_GEN2_0_OCRAM_64K_WRITABLE 1
#define NIOS2_GEN2_0_OCRAM_64K_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define NIOS2_GEN2_0_OCRAM_64K_MEMORY_INFO_GENERATE_DAT_SYM 1
#define NIOS2_GEN2_0_OCRAM_64K_MEMORY_INFO_GENERATE_HEX 1
#define NIOS2_GEN2_0_OCRAM_64K_MEMORY_INFO_HAS_BYTE_LANE 0
#define NIOS2_GEN2_0_OCRAM_64K_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define NIOS2_GEN2_0_OCRAM_64K_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define NIOS2_GEN2_0_OCRAM_64K_MEMORY_INFO_MEM_INIT_FILENAME soc_system_ocram_64K

/*
 * Macros for device 'switch_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'nios2_gen2_0'.
 * The macros are prefixed with 'NIOS2_GEN2_0_SWITCH_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define NIOS2_GEN2_0_SWITCH_PIO_COMPONENT_TYPE altera_avalon_pio
#define NIOS2_GEN2_0_SWITCH_PIO_COMPONENT_NAME switch_pio
#define NIOS2_GEN2_0_SWITCH_PIO_BASE 0x10800
#define NIOS2_GEN2_0_SWITCH_PIO_SPAN 16
#define NIOS2_GEN2_0_SWITCH_PIO_END 0x1080f
#define NIOS2_GEN2_0_SWITCH_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define NIOS2_GEN2_0_SWITCH_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NIOS2_GEN2_0_SWITCH_PIO_CAPTURE 0
#define NIOS2_GEN2_0_SWITCH_PIO_DATA_WIDTH 3
#define NIOS2_GEN2_0_SWITCH_PIO_DO_TEST_BENCH_WIRING 0
#define NIOS2_GEN2_0_SWITCH_PIO_DRIVEN_SIM_VALUE 0
#define NIOS2_GEN2_0_SWITCH_PIO_EDGE_TYPE NONE
#define NIOS2_GEN2_0_SWITCH_PIO_FREQ 50000000
#define NIOS2_GEN2_0_SWITCH_PIO_HAS_IN 1
#define NIOS2_GEN2_0_SWITCH_PIO_HAS_OUT 0
#define NIOS2_GEN2_0_SWITCH_PIO_HAS_TRI 0
#define NIOS2_GEN2_0_SWITCH_PIO_IRQ_TYPE NONE
#define NIOS2_GEN2_0_SWITCH_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'nios2_gen2_0'.
 * The macros are prefixed with 'NIOS2_GEN2_0_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define NIOS2_GEN2_0_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define NIOS2_GEN2_0_BUTTON_PIO_COMPONENT_NAME button_pio
#define NIOS2_GEN2_0_BUTTON_PIO_BASE 0x10810
#define NIOS2_GEN2_0_BUTTON_PIO_SPAN 16
#define NIOS2_GEN2_0_BUTTON_PIO_END 0x1081f
#define NIOS2_GEN2_0_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define NIOS2_GEN2_0_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NIOS2_GEN2_0_BUTTON_PIO_CAPTURE 0
#define NIOS2_GEN2_0_BUTTON_PIO_DATA_WIDTH 4
#define NIOS2_GEN2_0_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define NIOS2_GEN2_0_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define NIOS2_GEN2_0_BUTTON_PIO_EDGE_TYPE NONE
#define NIOS2_GEN2_0_BUTTON_PIO_FREQ 50000000
#define NIOS2_GEN2_0_BUTTON_PIO_HAS_IN 1
#define NIOS2_GEN2_0_BUTTON_PIO_HAS_OUT 0
#define NIOS2_GEN2_0_BUTTON_PIO_HAS_TRI 0
#define NIOS2_GEN2_0_BUTTON_PIO_IRQ_TYPE NONE
#define NIOS2_GEN2_0_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'nios2_gen2_0'.
 * The macros are prefixed with 'NIOS2_GEN2_0_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define NIOS2_GEN2_0_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define NIOS2_GEN2_0_LED_PIO_COMPONENT_NAME led_pio
#define NIOS2_GEN2_0_LED_PIO_BASE 0x10820
#define NIOS2_GEN2_0_LED_PIO_SPAN 16
#define NIOS2_GEN2_0_LED_PIO_END 0x1082f
#define NIOS2_GEN2_0_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define NIOS2_GEN2_0_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NIOS2_GEN2_0_LED_PIO_CAPTURE 0
#define NIOS2_GEN2_0_LED_PIO_DATA_WIDTH 4
#define NIOS2_GEN2_0_LED_PIO_DO_TEST_BENCH_WIRING 0
#define NIOS2_GEN2_0_LED_PIO_DRIVEN_SIM_VALUE 0
#define NIOS2_GEN2_0_LED_PIO_EDGE_TYPE NONE
#define NIOS2_GEN2_0_LED_PIO_FREQ 50000000
#define NIOS2_GEN2_0_LED_PIO_HAS_IN 0
#define NIOS2_GEN2_0_LED_PIO_HAS_OUT 1
#define NIOS2_GEN2_0_LED_PIO_HAS_TRI 0
#define NIOS2_GEN2_0_LED_PIO_IRQ_TYPE NONE
#define NIOS2_GEN2_0_LED_PIO_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys_0', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'nios2_gen2_0'.
 * The macros are prefixed with 'NIOS2_GEN2_0_SYSID_QSYS_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define NIOS2_GEN2_0_SYSID_QSYS_0_COMPONENT_TYPE altera_avalon_sysid_qsys
#define NIOS2_GEN2_0_SYSID_QSYS_0_COMPONENT_NAME sysid_qsys_0
#define NIOS2_GEN2_0_SYSID_QSYS_0_BASE 0x10830
#define NIOS2_GEN2_0_SYSID_QSYS_0_SPAN 8
#define NIOS2_GEN2_0_SYSID_QSYS_0_END 0x10837
#define NIOS2_GEN2_0_SYSID_QSYS_0_ID 3725647376
#define NIOS2_GEN2_0_SYSID_QSYS_0_TIMESTAMP 1616564416

/*
 * Macros for device 'jtag_uart_0', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'nios2_gen2_0'.
 * The macros are prefixed with 'NIOS2_GEN2_0_JTAG_UART_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define NIOS2_GEN2_0_JTAG_UART_0_COMPONENT_TYPE altera_avalon_jtag_uart
#define NIOS2_GEN2_0_JTAG_UART_0_COMPONENT_NAME jtag_uart_0
#define NIOS2_GEN2_0_JTAG_UART_0_BASE 0x10838
#define NIOS2_GEN2_0_JTAG_UART_0_SPAN 8
#define NIOS2_GEN2_0_JTAG_UART_0_END 0x1083f
#define NIOS2_GEN2_0_JTAG_UART_0_IRQ 0
#define NIOS2_GEN2_0_JTAG_UART_0_READ_DEPTH 64
#define NIOS2_GEN2_0_JTAG_UART_0_READ_THRESHOLD 8
#define NIOS2_GEN2_0_JTAG_UART_0_WRITE_DEPTH 64
#define NIOS2_GEN2_0_JTAG_UART_0_WRITE_THRESHOLD 8


#endif /* _ALTERA_SOC_SYSTEM_H_ */
